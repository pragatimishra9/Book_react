[{"/home/pragatim/code/BookAnAppointment_react/frontend/src/index.js":"1","/home/pragatim/code/BookAnAppointment_react/frontend/src/App.js":"2","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Navbar.js":"3","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Home.js":"4","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Form.js":"5","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Auth.js":"6","/home/pragatim/code/BookAnAppointment_react/frontend/src/Actions/Request.js":"7","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Dashbaord.js":"8","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Reports.js":"9","/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/DashboardServices.js":"10","/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/Constants.js":"11","/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/FormServices.js":"12","/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/HomeServices.js":"13","/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/ReportServices.js":"14"},{"size":255,"mtime":1672658006848,"results":"15","hashOfConfig":"16"},{"size":811,"mtime":1673249060149,"results":"17","hashOfConfig":"16"},{"size":3341,"mtime":1673249091363,"results":"18","hashOfConfig":"16"},{"size":5853,"mtime":1673516177362,"results":"19","hashOfConfig":"16"},{"size":4515,"mtime":1673513598643,"results":"20","hashOfConfig":"16"},{"size":516,"mtime":1672736929217,"results":"21","hashOfConfig":"16"},{"size":389,"mtime":1673250791040,"results":"22","hashOfConfig":"16"},{"size":6166,"mtime":1673512347187,"results":"23","hashOfConfig":"16"},{"size":3406,"mtime":1673517453149,"results":"24","hashOfConfig":"16"},{"size":1761,"mtime":1673512838233,"results":"25","hashOfConfig":"16"},{"size":127,"mtime":1673512789614,"results":"26","hashOfConfig":"16"},{"size":1091,"mtime":1673513540576,"results":"27","hashOfConfig":"16"},{"size":2006,"mtime":1673516121450,"results":"28","hashOfConfig":"16"},{"size":3112,"mtime":1673517430725,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1r44126",{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/pragatim/code/BookAnAppointment_react/frontend/src/index.js",[],[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/App.js",["75"],[],"import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Home from './components/Home';\nimport Auth from './components/Auth';\nimport Dashbaord from './components/Dashbaord';\nimport Reports from './components/Reports';\n\nfunction App() {\n    return (\n        <Router>\n            <Routes>\n                <Route exact path=\"/\" element={<Home />} />\n                <Route exact path=\"/signup\" element={<Auth type=\"signup\" />} />\n                <Route exact path=\"/signin\" element={<Auth type=\"signin\" />} />\n                <Route exact path=\"/dashboard\" element={<Dashbaord />} />\n                <Route exact path=\"/report\" element={<Reports />} />\n            </Routes>\n        </Router>\n    )\n}\n\nexport default App;\n","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Navbar.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Home.js",["76"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Request from '../Actions/Request';\nimport Navbar from './Navbar';\nimport { config } from '../Services/Constants';\nimport { fillDoctorBookingDetails, handleSelectedTimeSlot, bookAppointment } from '../Services/HomeServices';\n\n\nfunction Home() {\n    const [doctors, setDoctors] = useState([]);\n    const [currentDoctorId, setCurrentDoctorId] = useState(\"\");\n    const [patientName, setPatientName] = useState(\"\");\n    const [patientEmail, setPatientEmail] = useState(\"\");\n    const [patientContact, setPatientContact] = useState(\"\");\n    const [bookingDate, setBookingDate] = useState(\"\");\n    const [timeSlots, setTimeSlots] = useState([]);\n    const [selectedTimeSlot, setSelectedTimeSlot] = useState(\"\");\n\n    useEffect(() => {\n        async function getAllDoctors() {\n            const res = await axios.get(Request.doctorInfo, config);\n            setDoctors(res.data);\n        }\n\n        getAllDoctors();\n\n    }, []);\n\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className='container mt-5'>\n                <div className='row'>\n                    {doctors.map((doctor) => {\n                        return (\n                            <div className='col-3 mt-3'>\n                                <div className='card border border-4'>\n                                    <img class=\"card-img-top w-75 h-50\" src=\"https://i.pinimg.com/originals/9f/32/20/9f3220f4535dd9cd9743b995fdfdeaa1.jpg\" />\n                                    <div className='card-body'>\n                                        <h5 class=\"card-title\">{doctor.name}</h5>\n                                        <p class=\"card-text\">Start Time : {doctor.day_start_time} <br /> End Time : {doctor.day_end_time} <br /> Slot Period : {doctor.appointment_slot_time}</p>\n                                        <button className='btn btn-sm btn-primary' data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={(e) => fillDoctorBookingDetails(doctor.id, setCurrentDoctorId, setTimeSlots, doctors)}>Book Appointment</button>\n\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })}\n\n                </div>\n            </div>\n            <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <h1 class=\"modal-title fs-5\" id=\"exampleModalLabel\">Enter Your Details</h1>\n                            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n                        </div>\n                        <div class=\"modal-body\">\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">Select Date</span>\n                                <input type=\"date\" class=\"form-control\" value={bookingDate} onChange={(e) => { setBookingDate(e.target.value) }} />\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">Enter Name</span>\n                                <input type=\"text\" class=\"form-control\" value={patientName} onChange={(e) => { setPatientName(e.target.value) }} />\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">Email</span>\n                                <input type=\"email\" class=\"form-control\" value={patientEmail} onChange={(e) => { setPatientEmail(e.target.value) }} />\n                            </div>\n                            <div class=\"input-group mb-3\">\n                                <span class=\"input-group-text\" id=\"basic-addon1\">Contact</span>\n                                <input type=\"text\" class=\"form-control\" value={patientContact} onChange={(e) => { setPatientContact(e.target.value) }} />\n                            </div>\n                            <div className='container'>\n                                <h5>Selected Time Slot : {selectedTimeSlot}</h5>\n                                <div className='row'>\n\n                                    {timeSlots.map((timeslt) => {\n                                        return (\n                                            <div className='col-4 m-2 border border-3 rounded-pill border-warning'>\n                                                <div class=\"input-group mx-auto\">\n\n                                                    <input class=\"m-2\" type=\"checkbox\" value={timeslt} onChange={e => handleSelectedTimeSlot(e, setSelectedTimeSlot)} />\n                                                    <span class=\"input-group-text-4 m-1\">{timeslt}</span>\n                                                </div>\n                                            </div>\n                                        );\n                                    })}\n\n                                </div>\n                            </div>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\n                            <button type=\"button\" class=\"btn btn-info\" onClick={() => bookAppointment(currentDoctorId, bookingDate, selectedTimeSlot, patientName, patientEmail, patientContact)}>Book</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n","/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Form.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Auth.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Actions/Request.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Dashbaord.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/components/Reports.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/DashboardServices.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/Constants.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/FormServices.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/HomeServices.js",[],[],"/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/ReportServices.js",[],[],{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"82","line":40,"column":37,"nodeType":"83","endLine":40,"endColumn":158},"no-unused-vars","'Provider' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]