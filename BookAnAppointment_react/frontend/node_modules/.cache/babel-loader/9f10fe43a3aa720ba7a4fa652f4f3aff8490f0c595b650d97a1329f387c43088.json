{"ast":null,"code":"import _regeneratorRuntime from\"/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import Navbar from'./Navbar';import axios from'axios';import Request from'../Actions/Request';import{updateDoctorInfo,filterAppointmentData,updateAppointment}from'../Services/DashboardServices';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Dashbaord(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),startTime=_useState2[0],setStartTime=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),endTime=_useState4[0],setEndTime=_useState4[1];var _useState5=useState(\"15 Min\"),_useState6=_slicedToArray(_useState5,2),period=_useState6[0],setPeriod=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),currentDate=_useState8[0],setCurrentDate=_useState8[1];var _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),appointments=_useState10[0],setAppointments=_useState10[1];useEffect(function(){function getDoctorData(){return _getDoctorData.apply(this,arguments);}function _getDoctorData(){_getDoctorData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var data,config,body,res,st;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:data={user:localStorage.getItem('userEmail'),type:'info'};config={headers:{'Content-Type':'application/json','Accept':'application/json'}};body=JSON.stringify(data);_context.next=5;return axios.post(Request.doctorInfo,body,config);case 5:res=_context.sent;st=res.data.doctor.day_start_time;if(st!==null){setStartTime(res.data.doctor.day_start_time);setEndTime(res.data.doctor.day_end_time);setPeriod(res.data.doctor.appointment_slot_time);}case 8:case\"end\":return _context.stop();}},_callee);}));return _getDoctorData.apply(this,arguments);}var today=new Date();var date=today.getDate();if(date<10){date=\"0\".concat(date);}var month=today.getMonth()+1;if(month<10){month=\"0\".concat(month);}var year=today.getFullYear();setCurrentDate(\"\".concat(year,\"-\").concat(month,\"-\").concat(date));getDoctorData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navbar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"container mt-5\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"input-group mb-3  border border-info border-1 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"input-group-text\",children:\"Start Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",class:\"form-control\",value:startTime,onChange:function onChange(e){setStartTime(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsxs(\"div\",{class:\"input-group mb-3 border border-warning border-1 rounded\",children:[/*#__PURE__*/_jsx(\"span\",{class:\"input-group-text\",children:\"End Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"time\",class:\"form-control\",value:endTime,onChange:function onChange(e){setEndTime(e.target.value);}})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsxs(\"select\",{class:\"form-select mb-3 border border-danger border-1 rounded\",onChange:function onChange(e){setPeriod(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"15 Min\",children:\"15 Min\"}),/*#__PURE__*/_jsx(\"option\",{value:\"30 Min\",children:\"30 Min\"}),/*#__PURE__*/_jsx(\"option\",{value:\"45 Min\",children:\"45 Min\"}),/*#__PURE__*/_jsx(\"option\",{value:\"60 Min\",children:\"60 Min\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-sm btn-warning\",onClick:function onClick(){return updateDoctorInfo(startTime,endTime,period);},children:\" Update\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row mt-5\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-4\",children:/*#__PURE__*/_jsx(\"input\",{type:\"date\",class:\"form-control\",value:currentDate,onChange:function onChange(e){setCurrentDate(e.target.value);}})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-3\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-primary btn-sm\",onClick:function onClick(e){return filterAppointmentData(currentDate,setAppointments);},children:\"Filter\"})}),/*#__PURE__*/_jsxs(\"table\",{class:\"table table-hover\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Id\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Patient Name\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Contact\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Time Slot\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\",children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{scope:\"col\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:appointments.map(function(appointment){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{scope:\"row\",children:appointment.id}),/*#__PURE__*/_jsx(\"td\",{children:appointment.patient_name}),/*#__PURE__*/_jsx(\"td\",{children:appointment.patient_email}),/*#__PURE__*/_jsx(\"td\",{children:appointment.patient_contact}),/*#__PURE__*/_jsx(\"td\",{children:appointment.appointment_time}),/*#__PURE__*/_jsx(\"td\",{children:appointment.appointment_status}),appointment.appointment_status==='Open'?/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-warning m-1\",onClick:function onClick(){return updateAppointment(appointment.id,\"Closed\",appointments,setAppointments);},children:\"Closed\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-danger m-1\",onClick:function onClick(){return updateAppointment(appointment.id,\"Canceled\",appointments,setAppointments);},children:\"Cancel\"})]}):\"\",appointment.appointment_status==='Closed'|appointment.appointment_status==='Canceled'?/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn-outline-primary m-1\",onClick:function onClick(){return updateAppointment(appointment.id,\"Open\",appointments,setAppointments);},children:\"Open\"})}):\"\"]});})})]})]})]})]});}export default Dashbaord;","map":{"version":3,"names":["React","useState","useEffect","Navbar","axios","Request","updateDoctorInfo","filterAppointmentData","updateAppointment","Dashbaord","startTime","setStartTime","endTime","setEndTime","period","setPeriod","currentDate","setCurrentDate","appointments","setAppointments","getDoctorData","data","user","localStorage","getItem","type","config","headers","body","JSON","stringify","post","doctorInfo","res","st","doctor","day_start_time","day_end_time","appointment_slot_time","today","Date","date","getDate","month","getMonth","year","getFullYear","e","target","value","map","appointment","id","patient_name","patient_email","patient_contact","appointment_time","appointment_status"],"sources":["/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/src/components/Dashbaord.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport axios from 'axios';\nimport Request from '../Actions/Request';\nimport { updateDoctorInfo, filterAppointmentData, updateAppointment } from '../Services/DashboardServices';\n\nfunction Dashbaord() {\n    const [startTime, setStartTime] = useState(\"\");\n    const [endTime, setEndTime] = useState(\"\");\n    const [period, setPeriod] = useState(\"15 Min\");\n    const [currentDate, setCurrentDate] = useState(\"\");\n    const [appointments, setAppointments] = useState([]);\n\n    useEffect(() => {\n        async function getDoctorData() {\n\n            const data = {\n                user: localStorage.getItem('userEmail'),\n                type: 'info'\n            }\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            };\n            const body = JSON.stringify(data);\n            const res = await axios.post(Request.doctorInfo, body, config);\n            const st = res.data.doctor.day_start_time;\n\n            if (st !== null) {\n\n                setStartTime(res.data.doctor.day_start_time);\n                setEndTime(res.data.doctor.day_end_time);\n                setPeriod(res.data.doctor.appointment_slot_time);\n            }\n\n\n\n        }\n        let today = new Date();\n        let date = today.getDate();\n        if (date < 10) {\n            date = `0${date}`\n        }\n        let month = today.getMonth() + 1;\n        if (month < 10) {\n            month = `0${month}`\n        }\n        let year = today.getFullYear();\n        setCurrentDate(`${year}-${month}-${date}`)\n        getDoctorData();\n\n\n    }, []);\n\n\n    return (\n        <div>\n            <Navbar />\n            <div className='container mt-5'>\n                <div className='row'>\n                    <div className='col-3'>\n                        <div class=\"input-group mb-3  border border-info border-1 rounded\">\n                            <span class=\"input-group-text\" >Start Time</span>\n                            <input type=\"time\" class=\"form-control\" value={startTime} onChange={(e) => { setStartTime(e.target.value) }} />\n                        </div>\n                    </div>\n                    <div className='col-3'>\n                        <div class=\"input-group mb-3 border border-warning border-1 rounded\">\n                            <span class=\"input-group-text\" >End Time</span>\n                            <input type=\"time\" class=\"form-control\" value={endTime} onChange={(e) => { setEndTime(e.target.value) }} />\n                        </div>\n                    </div>\n                    <div className='col-3'>\n\n                        <select class=\"form-select mb-3 border border-danger border-1 rounded\" onChange={(e) => { setPeriod(e.target.value) }}>\n\n                            <option value=\"15 Min\">15 Min</option>\n                            <option value=\"30 Min\">30 Min</option>\n                            <option value=\"45 Min\">45 Min</option>\n                            <option value=\"60 Min\">60 Min</option>\n                        </select>\n                    </div>\n                    <div className='col-3'>\n                        <button className='btn btn-sm btn-warning' onClick={() => updateDoctorInfo(startTime, endTime, period)}> Update</button>\n                    </div>\n                </div>\n\n                <div className='row mt-5'>\n                    <div className='col-4'>\n                        <input type=\"date\" class=\"form-control\" value={currentDate} onChange={(e) => { setCurrentDate(e.target.value) }} />\n                    </div>\n                    <div className='col-3'>\n                        <button className='btn btn-outline-primary btn-sm' onClick={(e) => filterAppointmentData(currentDate, setAppointments)}>Filter</button>\n                    </div>\n                    <table class=\"table table-hover\">\n                        <thead>\n                            <tr>\n                                <th scope=\"col\">Id</th>\n                                <th scope=\"col\">Patient Name</th>\n                                <th scope=\"col\">Email</th>\n                                <th scope=\"col\">Contact</th>\n                                <th scope=\"col\">Time Slot</th>\n                                <th scope=\"col\">Status</th>\n                                <th scope=\"col\"></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {appointments.map((appointment) => {\n                                return (\n                                    <tr>\n                                        <th scope=\"row\">{appointment.id}</th>\n                                        <td>{appointment.patient_name}</td>\n                                        <td>{appointment.patient_email}</td>\n                                        <td>{appointment.patient_contact}</td>\n                                        <td>{appointment.appointment_time}</td>\n                                        <td>{appointment.appointment_status}</td>\n                                        {appointment.appointment_status === 'Open' ? <td><button className='btn btn-outline-warning m-1' onClick={() => updateAppointment(appointment.id, \"Closed\", appointments, setAppointments)}>Closed</button><button className='btn btn-outline-danger m-1' onClick={() => updateAppointment(appointment.id, \"Canceled\", appointments, setAppointments)}>Cancel</button></td> : \"\"}\n                                        {appointment.appointment_status === 'Closed' | appointment.appointment_status === 'Canceled' ? <td><button className='btn btn-outline-primary m-1' onClick={() => updateAppointment(appointment.id, \"Open\", appointments, setAppointments)}>Open</button></td> : \"\"}\n\n                                    </tr>\n                                );\n                            })}\n\n\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Dashbaord;\n"],"mappings":"8dAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAOC,OAAM,KAAM,UAAU,CAC7B,MAAOC,MAAK,KAAM,OAAO,CACzB,MAAOC,QAAO,KAAM,oBAAoB,CACxC,OAASC,gBAAgB,CAAEC,qBAAqB,CAAEC,iBAAiB,KAAQ,+BAA+B,CAAC,wFAE3G,QAASC,UAAS,EAAG,CACjB,cAAkCR,QAAQ,CAAC,EAAE,CAAC,wCAAvCS,SAAS,eAAEC,YAAY,eAC9B,eAA8BV,QAAQ,CAAC,EAAE,CAAC,yCAAnCW,OAAO,eAAEC,UAAU,eAC1B,eAA4BZ,QAAQ,CAAC,QAAQ,CAAC,yCAAvCa,MAAM,eAAEC,SAAS,eACxB,eAAsCd,QAAQ,CAAC,EAAE,CAAC,yCAA3Ce,WAAW,eAAEC,cAAc,eAClC,eAAwChB,QAAQ,CAAC,EAAE,CAAC,0CAA7CiB,YAAY,gBAAEC,eAAe,gBAEpCjB,SAAS,CAAC,UAAM,SACGkB,cAAa,mJAA5B,gKAEUC,IAAI,CAAG,CACTC,IAAI,CAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACvCC,IAAI,CAAE,MACV,CAAC,CACKC,MAAM,CAAG,CACXC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAE,kBACd,CACJ,CAAC,CACKC,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,uBACfjB,MAAK,CAAC2B,IAAI,CAAC1B,OAAO,CAAC2B,UAAU,CAAEJ,IAAI,CAAEF,MAAM,CAAC,QAAxDO,GAAG,eACHC,EAAE,CAAGD,GAAG,CAACZ,IAAI,CAACc,MAAM,CAACC,cAAc,CAEzC,GAAIF,EAAE,GAAK,IAAI,CAAE,CAEbvB,YAAY,CAACsB,GAAG,CAACZ,IAAI,CAACc,MAAM,CAACC,cAAc,CAAC,CAC5CvB,UAAU,CAACoB,GAAG,CAACZ,IAAI,CAACc,MAAM,CAACE,YAAY,CAAC,CACxCtB,SAAS,CAACkB,GAAG,CAACZ,IAAI,CAACc,MAAM,CAACG,qBAAqB,CAAC,CACpD,CAAC,qDAIJ,gDACD,GAAIC,MAAK,CAAG,GAAIC,KAAI,EAAE,CACtB,GAAIC,KAAI,CAAGF,KAAK,CAACG,OAAO,EAAE,CAC1B,GAAID,IAAI,CAAG,EAAE,CAAE,CACXA,IAAI,YAAOA,IAAI,CAAE,CACrB,CACA,GAAIE,MAAK,CAAGJ,KAAK,CAACK,QAAQ,EAAE,CAAG,CAAC,CAChC,GAAID,KAAK,CAAG,EAAE,CAAE,CACZA,KAAK,YAAOA,KAAK,CAAE,CACvB,CACA,GAAIE,KAAI,CAAGN,KAAK,CAACO,WAAW,EAAE,CAC9B7B,cAAc,WAAI4B,IAAI,aAAIF,KAAK,aAAIF,IAAI,EAAG,CAC1CrB,aAAa,EAAE,CAGnB,CAAC,CAAE,EAAE,CAAC,CAGN,mBACI,oCACI,KAAC,MAAM,IAAG,cACV,aAAK,SAAS,CAAC,gBAAgB,wBAC3B,aAAK,SAAS,CAAC,KAAK,wBAChB,YAAK,SAAS,CAAC,OAAO,uBAClB,aAAK,KAAK,CAAC,uDAAuD,wBAC9D,aAAM,KAAK,CAAC,kBAAkB,UAAE,YAAU,EAAO,cACjD,cAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAEV,SAAU,CAAC,QAAQ,CAAE,kBAACqC,CAAC,CAAK,CAAEpC,YAAY,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,EAAG,GAC7G,EACJ,cACN,YAAK,SAAS,CAAC,OAAO,uBAClB,aAAK,KAAK,CAAC,yDAAyD,wBAChE,aAAM,KAAK,CAAC,kBAAkB,UAAE,UAAQ,EAAO,cAC/C,cAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAErC,OAAQ,CAAC,QAAQ,CAAE,kBAACmC,CAAC,CAAK,CAAElC,UAAU,CAACkC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,EAAG,GACzG,EACJ,cACN,YAAK,SAAS,CAAC,OAAO,uBAElB,gBAAQ,KAAK,CAAC,wDAAwD,CAAC,QAAQ,CAAE,kBAACF,CAAC,CAAK,CAAEhC,SAAS,CAACgC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,wBAElH,eAAQ,KAAK,CAAC,QAAQ,UAAC,QAAM,EAAS,cACtC,eAAQ,KAAK,CAAC,QAAQ,UAAC,QAAM,EAAS,cACtC,eAAQ,KAAK,CAAC,QAAQ,UAAC,QAAM,EAAS,cACtC,eAAQ,KAAK,CAAC,QAAQ,UAAC,QAAM,EAAS,GACjC,EACP,cACN,YAAK,SAAS,CAAC,OAAO,uBAClB,eAAQ,SAAS,CAAC,wBAAwB,CAAC,OAAO,CAAE,yBAAM3C,iBAAgB,CAACI,SAAS,CAAEE,OAAO,CAAEE,MAAM,CAAC,EAAC,UAAC,SAAO,EAAS,EACtH,GACJ,cAEN,aAAK,SAAS,CAAC,UAAU,wBACrB,YAAK,SAAS,CAAC,OAAO,uBAClB,cAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAEE,WAAY,CAAC,QAAQ,CAAE,kBAAC+B,CAAC,CAAK,CAAE9B,cAAc,CAAC8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAE,EAAG,EACjH,cACN,YAAK,SAAS,CAAC,OAAO,uBAClB,eAAQ,SAAS,CAAC,gCAAgC,CAAC,OAAO,CAAE,iBAACF,CAAC,QAAKxC,sBAAqB,CAACS,WAAW,CAAEG,eAAe,CAAC,EAAC,UAAC,QAAM,EAAS,EACrI,cACN,eAAO,KAAK,CAAC,mBAAmB,wBAC5B,oCACI,mCACI,WAAI,KAAK,CAAC,KAAK,UAAC,IAAE,EAAK,cACvB,WAAI,KAAK,CAAC,KAAK,UAAC,cAAY,EAAK,cACjC,WAAI,KAAK,CAAC,KAAK,UAAC,OAAK,EAAK,cAC1B,WAAI,KAAK,CAAC,KAAK,UAAC,SAAO,EAAK,cAC5B,WAAI,KAAK,CAAC,KAAK,UAAC,WAAS,EAAK,cAC9B,WAAI,KAAK,CAAC,KAAK,UAAC,QAAM,EAAK,cAC3B,WAAI,KAAK,CAAC,KAAK,EAAM,GACpB,EACD,cACR,uBACKD,YAAY,CAACgC,GAAG,CAAC,SAACC,WAAW,CAAK,CAC/B,mBACI,mCACI,WAAI,KAAK,CAAC,KAAK,UAAEA,WAAW,CAACC,EAAE,EAAM,cACrC,oBAAKD,WAAW,CAACE,YAAY,EAAM,cACnC,oBAAKF,WAAW,CAACG,aAAa,EAAM,cACpC,oBAAKH,WAAW,CAACI,eAAe,EAAM,cACtC,oBAAKJ,WAAW,CAACK,gBAAgB,EAAM,cACvC,oBAAKL,WAAW,CAACM,kBAAkB,EAAM,CACxCN,WAAW,CAACM,kBAAkB,GAAK,MAAM,cAAG,mCAAI,eAAQ,SAAS,CAAC,6BAA6B,CAAC,OAAO,CAAE,yBAAMjD,kBAAiB,CAAC2C,WAAW,CAACC,EAAE,CAAE,QAAQ,CAAElC,YAAY,CAAEC,eAAe,CAAC,EAAC,UAAC,QAAM,EAAS,6BAAQ,SAAS,CAAC,4BAA4B,CAAC,OAAO,CAAE,yBAAMX,kBAAiB,CAAC2C,WAAW,CAACC,EAAE,CAAE,UAAU,CAAElC,YAAY,CAAEC,eAAe,CAAC,EAAC,UAAC,QAAM,EAAS,GAAK,CAAG,EAAE,CAC/WgC,WAAW,CAACM,kBAAkB,GAAK,QAAQ,CAAGN,WAAW,CAACM,kBAAkB,GAAK,UAAU,cAAG,iCAAI,eAAQ,SAAS,CAAC,6BAA6B,CAAC,OAAO,CAAE,yBAAMjD,kBAAiB,CAAC2C,WAAW,CAACC,EAAE,CAAE,MAAM,CAAElC,YAAY,CAAEC,eAAe,CAAC,EAAC,UAAC,MAAI,EAAS,EAAK,CAAG,EAAE,GAElQ,CAEb,CAAC,CAAC,EAGE,GACJ,GACN,GACJ,GAEJ,CAEd,CAEA,cAAeV,UAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}