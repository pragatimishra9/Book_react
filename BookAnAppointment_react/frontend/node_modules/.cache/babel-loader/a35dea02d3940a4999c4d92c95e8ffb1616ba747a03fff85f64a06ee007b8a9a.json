{"ast":null,"code":"import _regeneratorRuntime from\"/home/pragatim/code/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/pragatim/code/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from'axios';import Request from'../Actions/Request';import{config}from'./Constants';import moment from'moment';export var fillDoctorBookingDetails=function fillDoctorBookingDetails(doctorId,setCurrentDoctorId,setTimeSlots,doctors){setCurrentDoctorId(doctorId);var currentDoctor={};doctors.map(function(doctor){if(doctor.id===doctorId){currentDoctor=doctor;}return\"\";});var day_start_time=moment(currentDoctor.day_start_time,\"hh:mm\");var day_end_time=moment(currentDoctor.day_end_time,\"hh:mm\");var timeJump=currentDoctor.appointment_slot_time.split(\" \")[0];var now=moment();var currentTime=moment(\"\".concat(now.hour(),\":\").concat(now.minute()),\"hh:mm\");var timeStamps=[];//console.log(timeJump);\nwhile(day_start_time<day_end_time){if(day_start_time>=currentTime){var temp=\"\".concat(day_start_time.hour(),\":\").concat(day_start_time.minute());day_start_time=day_start_time.add(parseInt(timeJump),'m');temp=\"\".concat(temp,\"-\").concat(day_start_time.hour(),\":\").concat(day_start_time.minute());timeStamps.push(temp);}else{day_start_time=day_start_time.add(parseInt(timeJump),'m');}}setTimeSlots(timeStamps);};export function handleSelectedTimeSlot(e,setSelectedTimeSlot){if(e.target.checked){setSelectedTimeSlot(e.target.value);}else{setSelectedTimeSlot(\"\");}}export function bookAppointment(_x,_x2,_x3,_x4,_x5,_x6){return _bookAppointment.apply(this,arguments);}function _bookAppointment(){_bookAppointment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(currentDoctorId,bookingDate,selectedTimeSlot,patientName,patientEmail,patientContact){var data,body,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:data={doctor_id:currentDoctorId,date:bookingDate,time_slot:selectedTimeSlot,patient_name:patientName,patient_email:patientEmail,patient_contact:patientContact};body=JSON.stringify(data);_context.next=4;return axios.post(Request.bookAppointment,body,config);case 4:res=_context.sent;alert(res.data.message);case 6:case\"end\":return _context.stop();}},_callee);}));return _bookAppointment.apply(this,arguments);}","map":{"version":3,"names":["axios","Request","config","moment","fillDoctorBookingDetails","doctorId","setCurrentDoctorId","setTimeSlots","doctors","currentDoctor","map","doctor","id","day_start_time","day_end_time","timeJump","appointment_slot_time","split","now","currentTime","hour","minute","timeStamps","temp","add","parseInt","push","handleSelectedTimeSlot","e","setSelectedTimeSlot","target","checked","value","bookAppointment","currentDoctorId","bookingDate","selectedTimeSlot","patientName","patientEmail","patientContact","data","doctor_id","date","time_slot","patient_name","patient_email","patient_contact","body","JSON","stringify","post","res","alert","message"],"sources":["/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/HomeServices.js"],"sourcesContent":["import axios from 'axios';\nimport Request from '../Actions/Request';\nimport { config } from './Constants';\nimport moment from 'moment';\n\n\nexport const fillDoctorBookingDetails = (doctorId, setCurrentDoctorId, setTimeSlots, doctors) => {\n    setCurrentDoctorId(doctorId);\n    let currentDoctor = {};\n    doctors.map((doctor) => {\n        if (doctor.id === doctorId) {\n            currentDoctor = doctor;\n        }\n        return \"\";\n    });\n    let day_start_time = moment(currentDoctor.day_start_time, \"hh:mm\");\n    let day_end_time = moment(currentDoctor.day_end_time, \"hh:mm\");\n    const timeJump = currentDoctor.appointment_slot_time.split(\" \")[0];\n    let now = moment();\n    let currentTime = moment(`${now.hour()}:${now.minute()}`, \"hh:mm\");\n    let timeStamps = [];\n    //console.log(timeJump);\n    while (day_start_time < day_end_time) {\n        if (day_start_time >= currentTime) {\n            let temp = `${day_start_time.hour()}:${day_start_time.minute()}`\n            day_start_time = day_start_time.add(parseInt(timeJump), 'm');\n            temp = `${temp}-${day_start_time.hour()}:${day_start_time.minute()}`;\n            timeStamps.push(temp);\n        } else {\n            day_start_time = day_start_time.add(parseInt(timeJump), 'm');\n        }\n    }\n    setTimeSlots(timeStamps);\n}\n\nexport function handleSelectedTimeSlot(e, setSelectedTimeSlot) {\n    if (e.target.checked) {\n        setSelectedTimeSlot(e.target.value);\n    }\n    else {\n        setSelectedTimeSlot(\"\");\n    }\n}\n\nexport async function bookAppointment(currentDoctorId, bookingDate, selectedTimeSlot, patientName, patientEmail, patientContact) {\n    let data = {\n        doctor_id: currentDoctorId,\n        date: bookingDate,\n        time_slot: selectedTimeSlot,\n        patient_name: patientName,\n        patient_email: patientEmail,\n        patient_contact: patientContact,\n    };\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.bookAppointment, body, config);\n    alert(res.data.message);\n}"],"mappings":"oSAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,QAAO,KAAM,oBAAoB,CACxC,OAASC,MAAM,KAAQ,aAAa,CACpC,MAAOC,OAAM,KAAM,QAAQ,CAG3B,MAAO,IAAMC,yBAAwB,CAAG,QAA3BA,yBAAwB,CAAIC,QAAQ,CAAEC,kBAAkB,CAAEC,YAAY,CAAEC,OAAO,CAAK,CAC7FF,kBAAkB,CAACD,QAAQ,CAAC,CAC5B,GAAII,cAAa,CAAG,CAAC,CAAC,CACtBD,OAAO,CAACE,GAAG,CAAC,SAACC,MAAM,CAAK,CACpB,GAAIA,MAAM,CAACC,EAAE,GAAKP,QAAQ,CAAE,CACxBI,aAAa,CAAGE,MAAM,CAC1B,CACA,MAAO,EAAE,CACb,CAAC,CAAC,CACF,GAAIE,eAAc,CAAGV,MAAM,CAACM,aAAa,CAACI,cAAc,CAAE,OAAO,CAAC,CAClE,GAAIC,aAAY,CAAGX,MAAM,CAACM,aAAa,CAACK,YAAY,CAAE,OAAO,CAAC,CAC9D,GAAMC,SAAQ,CAAGN,aAAa,CAACO,qBAAqB,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAClE,GAAIC,IAAG,CAAGf,MAAM,EAAE,CAClB,GAAIgB,YAAW,CAAGhB,MAAM,WAAIe,GAAG,CAACE,IAAI,EAAE,aAAIF,GAAG,CAACG,MAAM,EAAE,EAAI,OAAO,CAAC,CAClE,GAAIC,WAAU,CAAG,EAAE,CACnB;AACA,MAAOT,cAAc,CAAGC,YAAY,CAAE,CAClC,GAAID,cAAc,EAAIM,WAAW,CAAE,CAC/B,GAAII,KAAI,WAAMV,cAAc,CAACO,IAAI,EAAE,aAAIP,cAAc,CAACQ,MAAM,EAAE,CAAE,CAChER,cAAc,CAAGA,cAAc,CAACW,GAAG,CAACC,QAAQ,CAACV,QAAQ,CAAC,CAAE,GAAG,CAAC,CAC5DQ,IAAI,WAAMA,IAAI,aAAIV,cAAc,CAACO,IAAI,EAAE,aAAIP,cAAc,CAACQ,MAAM,EAAE,CAAE,CACpEC,UAAU,CAACI,IAAI,CAACH,IAAI,CAAC,CACzB,CAAC,IAAM,CACHV,cAAc,CAAGA,cAAc,CAACW,GAAG,CAACC,QAAQ,CAACV,QAAQ,CAAC,CAAE,GAAG,CAAC,CAChE,CACJ,CACAR,YAAY,CAACe,UAAU,CAAC,CAC5B,CAAC,CAED,MAAO,SAASK,uBAAsB,CAACC,CAAC,CAAEC,mBAAmB,CAAE,CAC3D,GAAID,CAAC,CAACE,MAAM,CAACC,OAAO,CAAE,CAClBF,mBAAmB,CAACD,CAAC,CAACE,MAAM,CAACE,KAAK,CAAC,CACvC,CAAC,IACI,CACDH,mBAAmB,CAAC,EAAE,CAAC,CAC3B,CACJ,CAEA,eAAsBI,gBAAe,wEAYpC,uGAZM,iBAA+BC,eAAe,CAAEC,WAAW,CAAEC,gBAAgB,CAAEC,WAAW,CAAEC,YAAY,CAAEC,cAAc,qIACvHC,IAAI,CAAG,CACPC,SAAS,CAAEP,eAAe,CAC1BQ,IAAI,CAAEP,WAAW,CACjBQ,SAAS,CAAEP,gBAAgB,CAC3BQ,YAAY,CAAEP,WAAW,CACzBQ,aAAa,CAAEP,YAAY,CAC3BQ,eAAe,CAAEP,cACrB,CAAC,CACKQ,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACT,IAAI,CAAC,uBACfxC,MAAK,CAACkD,IAAI,CAACjD,OAAO,CAACgC,eAAe,CAAEc,IAAI,CAAE7C,MAAM,CAAC,QAA7DiD,GAAG,eACTC,KAAK,CAACD,GAAG,CAACX,IAAI,CAACa,OAAO,CAAC,CAAC,qDAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}