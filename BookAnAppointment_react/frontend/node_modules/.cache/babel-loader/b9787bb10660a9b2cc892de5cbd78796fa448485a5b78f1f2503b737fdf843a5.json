{"ast":null,"code":"import Request from '../Actions/Request';\nimport axios from 'axios';\nimport { config } from '../Services/Constants';\nexport async function Authenticate(name, email, password, repassword, type, setMessage, navigate) {\n  if (type === 'signup') {\n    let data = {\n      name,\n      email,\n      password,\n      repassword,\n      type\n    };\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.auth, body, config);\n    if (res.data.status !== 200) {\n      setMessage(res.data.error);\n    } else {\n      navigate(\"/signin\");\n    }\n  } else if (type === 'signin') {\n    let data = {\n      email,\n      password,\n      type\n    };\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.auth, body, config);\n    if (res.data.status !== 200) {\n      setMessage(res.data.error);\n    } else {\n      localStorage.setItem('isAutenticated', true);\n      localStorage.setItem('user', res.data.name);\n      localStorage.setItem('userEmail', res.data.username);\n      navigate(\"/dashboard\");\n    }\n  }\n}\n_c = Authenticate;\nvar _c;\n$RefreshReg$(_c, \"Authenticate\");","map":{"version":3,"names":["Request","axios","config","Authenticate","name","email","password","repassword","type","setMessage","navigate","data","body","JSON","stringify","res","post","auth","status","error","localStorage","setItem","username"],"sources":["/home/pragatim/code/BookAnAppointment_react/frontend/src/Services/FormServices.js"],"sourcesContent":["import Request from '../Actions/Request';\nimport axios from 'axios';\nimport { config } from '../Services/Constants';\n\n\n\nexport async function Authenticate(name, email, password, repassword, type, setMessage, navigate) {\n    if (type === 'signup') {\n        let data = { name, email, password, repassword, type };\n\n        const body = JSON.stringify(data);\n\n        const res = await axios.post(Request.auth, body, config);\n        if (res.data.status !== 200) {\n            setMessage(res.data.error);\n        } else {\n            navigate(\"/signin\");\n        }\n    }\n    else if (type === 'signin') {\n        let data = { email, password, type };\n\n        const body = JSON.stringify(data);\n\n        const res = await axios.post(Request.auth, body, config);\n\n        if (res.data.status !== 200) {\n            setMessage(res.data.error);\n        } else {\n            localStorage.setItem('isAutenticated', true);\n            localStorage.setItem('user', res.data.name);\n            localStorage.setItem('userEmail', res.data.username);\n            navigate(\"/dashboard\");\n        }\n    }\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,uBAAuB;AAI9C,OAAO,eAAeC,YAAY,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAE;EAC9F,IAAIF,IAAI,KAAK,QAAQ,EAAE;IACnB,IAAIG,IAAI,GAAG;MAAEP,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,UAAU;MAAEC;IAAK,CAAC;IAEtD,MAAMI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAEjC,MAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAChB,OAAO,CAACiB,IAAI,EAAEL,IAAI,EAAEV,MAAM,CAAC;IACxD,IAAIa,GAAG,CAACJ,IAAI,CAACO,MAAM,KAAK,GAAG,EAAE;MACzBT,UAAU,CAACM,GAAG,CAACJ,IAAI,CAACQ,KAAK,CAAC;IAC9B,CAAC,MAAM;MACHT,QAAQ,CAAC,SAAS,CAAC;IACvB;EACJ,CAAC,MACI,IAAIF,IAAI,KAAK,QAAQ,EAAE;IACxB,IAAIG,IAAI,GAAG;MAAEN,KAAK;MAAEC,QAAQ;MAAEE;IAAK,CAAC;IAEpC,MAAMI,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IAEjC,MAAMI,GAAG,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAChB,OAAO,CAACiB,IAAI,EAAEL,IAAI,EAAEV,MAAM,CAAC;IAExD,IAAIa,GAAG,CAACJ,IAAI,CAACO,MAAM,KAAK,GAAG,EAAE;MACzBT,UAAU,CAACM,GAAG,CAACJ,IAAI,CAACQ,KAAK,CAAC;IAC9B,CAAC,MAAM;MACHC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAE,IAAI,CAAC;MAC5CD,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,GAAG,CAACJ,IAAI,CAACP,IAAI,CAAC;MAC3CgB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEN,GAAG,CAACJ,IAAI,CAACW,QAAQ,CAAC;MACpDZ,QAAQ,CAAC,YAAY,CAAC;IAC1B;EACJ;AACJ;AAAC,KA7BqBP,YAAY;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}