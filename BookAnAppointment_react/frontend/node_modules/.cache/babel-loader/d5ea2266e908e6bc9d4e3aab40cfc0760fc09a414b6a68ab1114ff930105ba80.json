{"ast":null,"code":"import _regeneratorRuntime from\"/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import Request from\"../Actions/Request\";import axios from'axios';import{config}from\"./Constants\";export function updateDoctorInfo(_x,_x2,_x3){return _updateDoctorInfo.apply(this,arguments);}function _updateDoctorInfo(){_updateDoctorInfo=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(startTime,endTime,period){var data,body,res;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:data={user:localStorage.getItem('userEmail'),type:'infoUpdate',startTime:startTime,endTime:endTime,period:period};body=JSON.stringify(data);_context.next=4;return axios.post(Request.doctorInfo,body,config);case 4:res=_context.sent;if(res.data.status===200){alert(res.data.message);}else{alert(res.data.error);}case 6:case\"end\":return _context.stop();}},_callee);}));return _updateDoctorInfo.apply(this,arguments);}export function filterAppointmentData(_x4,_x5){return _filterAppointmentData.apply(this,arguments);}function _filterAppointmentData(){_filterAppointmentData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(currentDate,setAppointments){var data,body,res;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:data={user:localStorage.getItem('userEmail'),type:'info',currentDate:currentDate};body=JSON.stringify(data);_context2.next=4;return axios.post(Request.doctorInfo,body,config);case 4:res=_context2.sent;if(res.data.status===200){setAppointments(res.data.appointments);}else{alert(res.data.error);}case 6:case\"end\":return _context2.stop();}},_callee2);}));return _filterAppointmentData.apply(this,arguments);}export function updateAppointment(_x6,_x7,_x8,_x9){return _updateAppointment.apply(this,arguments);}function _updateAppointment(){_updateAppointment=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(appId,status,appointments,setAppointments){var data,body,res,apps;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:data={id:appId,status:status};body=JSON.stringify(data);_context3.next=4;return axios.post(Request.updateAppointment,body,config);case 4:res=_context3.sent;if(res.data.status===200){apps=[];appointments.map(function(appointment){if(appointment.id===appId){appointment.appointment_status=status;apps.push(appointment);}else{apps.push(appointment);}return\"\";});setAppointments(apps);}else{alert(res.data.error);}case 6:case\"end\":return _context3.stop();}},_callee3);}));return _updateAppointment.apply(this,arguments);}","map":{"version":3,"names":["Request","axios","config","updateDoctorInfo","startTime","endTime","period","data","user","localStorage","getItem","type","body","JSON","stringify","post","doctorInfo","res","status","alert","message","error","filterAppointmentData","currentDate","setAppointments","appointments","updateAppointment","appId","id","apps","map","appointment","appointment_status","push"],"sources":["/home/pragatim/code/repo/Book_react/BookAnAppointment_react/frontend/src/Services/DashboardServices.js"],"sourcesContent":["import Request from \"../Actions/Request\";\nimport axios from 'axios';\nimport { config } from \"./Constants\";\n\nexport async function updateDoctorInfo(startTime, endTime, period) {\n    const data = {\n        user: localStorage.getItem('userEmail'),\n        type: 'infoUpdate',\n        startTime: startTime,\n        endTime: endTime,\n        period: period\n    }\n\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.doctorInfo, body, config);\n    if (res.data.status === 200) {\n        alert(res.data.message)\n    }\n    else {\n        alert(res.data.error)\n    }\n\n}\n\nexport async function filterAppointmentData(currentDate, setAppointments) {\n    const data = {\n        user: localStorage.getItem('userEmail'),\n        type: 'info',\n        currentDate: currentDate\n    }\n\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.doctorInfo, body, config);\n    if (res.data.status === 200) {\n        setAppointments(res.data.appointments);\n    }\n    else {\n        alert(res.data.error)\n    }\n}\n\nexport async function updateAppointment(appId, status, appointments, setAppointments) {\n    const data = {\n        id: appId,\n        status: status\n    }\n\n    const body = JSON.stringify(data);\n    const res = await axios.post(Request.updateAppointment, body, config);\n    if (res.data.status === 200) {\n        let apps = []\n        appointments.map((appointment) => {\n            if (appointment.id === appId) {\n                appointment.appointment_status = status;\n                apps.push(appointment);\n            }\n            else {\n                apps.push(appointment);\n            }\n            return \"\";\n        });\n        setAppointments(apps);\n    }\n    else {\n        alert(res.data.error)\n    }\n}"],"mappings":"oUAAA,MAAOA,QAAO,KAAM,oBAAoB,CACxC,MAAOC,MAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,aAAa,CAEpC,eAAsBC,iBAAgB,6DAkBrC,yGAlBM,iBAAgCC,SAAS,CAAEC,OAAO,CAAEC,MAAM,qIACvDC,IAAI,CAAG,CACTC,IAAI,CAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACvCC,IAAI,CAAE,YAAY,CAClBP,SAAS,CAAEA,SAAS,CACpBC,OAAO,CAAEA,OAAO,CAChBC,MAAM,CAAEA,MACZ,CAAC,CAEKM,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,uBACfN,MAAK,CAACc,IAAI,CAACf,OAAO,CAACgB,UAAU,CAAEJ,IAAI,CAAEV,MAAM,CAAC,QAAxDe,GAAG,eACT,GAAIA,GAAG,CAACV,IAAI,CAACW,MAAM,GAAK,GAAG,CAAE,CACzBC,KAAK,CAACF,GAAG,CAACV,IAAI,CAACa,OAAO,CAAC,CAC3B,CAAC,IACI,CACDD,KAAK,CAACF,GAAG,CAACV,IAAI,CAACc,KAAK,CAAC,CACzB,CAAC,qDAEJ,mDAED,eAAsBC,sBAAqB,+DAe1C,mHAfM,kBAAqCC,WAAW,CAAEC,eAAe,yIAC9DjB,IAAI,CAAG,CACTC,IAAI,CAAEC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CACvCC,IAAI,CAAE,MAAM,CACZY,WAAW,CAAEA,WACjB,CAAC,CAEKX,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,wBACfN,MAAK,CAACc,IAAI,CAACf,OAAO,CAACgB,UAAU,CAAEJ,IAAI,CAAEV,MAAM,CAAC,QAAxDe,GAAG,gBACT,GAAIA,GAAG,CAACV,IAAI,CAACW,MAAM,GAAK,GAAG,CAAE,CACzBM,eAAe,CAACP,GAAG,CAACV,IAAI,CAACkB,YAAY,CAAC,CAC1C,CAAC,IACI,CACDN,KAAK,CAACF,GAAG,CAACV,IAAI,CAACc,KAAK,CAAC,CACzB,CAAC,uDACJ,wDAED,eAAsBK,kBAAiB,mEAyBtC,2GAzBM,kBAAiCC,KAAK,CAAET,MAAM,CAAEO,YAAY,CAAED,eAAe,8IAC1EjB,IAAI,CAAG,CACTqB,EAAE,CAAED,KAAK,CACTT,MAAM,CAAEA,MACZ,CAAC,CAEKN,IAAI,CAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC,wBACfN,MAAK,CAACc,IAAI,CAACf,OAAO,CAAC0B,iBAAiB,CAAEd,IAAI,CAAEV,MAAM,CAAC,QAA/De,GAAG,gBACT,GAAIA,GAAG,CAACV,IAAI,CAACW,MAAM,GAAK,GAAG,CAAE,CACrBW,IAAI,CAAG,EAAE,CACbJ,YAAY,CAACK,GAAG,CAAC,SAACC,WAAW,CAAK,CAC9B,GAAIA,WAAW,CAACH,EAAE,GAAKD,KAAK,CAAE,CAC1BI,WAAW,CAACC,kBAAkB,CAAGd,MAAM,CACvCW,IAAI,CAACI,IAAI,CAACF,WAAW,CAAC,CAC1B,CAAC,IACI,CACDF,IAAI,CAACI,IAAI,CAACF,WAAW,CAAC,CAC1B,CACA,MAAO,EAAE,CACb,CAAC,CAAC,CACFP,eAAe,CAACK,IAAI,CAAC,CACzB,CAAC,IACI,CACDV,KAAK,CAACF,GAAG,CAACV,IAAI,CAACc,KAAK,CAAC,CACzB,CAAC,uDACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}